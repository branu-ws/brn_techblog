<title>NetbeantからAtomに乗り換えた。</title>

こんにちは、フロントエンドエンジニアの小原です。
さて、エンジニアの皆さんはエディタは何を使ってますか？
小原はかつてNetbeansを使っていましたが、最近Atomに乗り換えました。すごい今更ですが。

<h3>なぜフロントエンドエンジニアがNetbeans?</h3>
「フロントエンドエンジニアがNetbeans?なんで?」と色んな人に聞かれましたが、
単に前職のPJがPHP開発で、Netbeans指定だったからです。
前職ではデザイナーという肩書だったので、「小原さんすごいですねー。デザイナーなのにNetbeans使えるんですか？」なんて、
謎な褒められ方してました((デザイナーでもHTMLどころかPHPのViewぐらいは触るのが当たり前のPJだったので))((さすがにVimやEmacsを使えと言われたら困りますが))。
IDEは重いのですが、色々と便利でした。プラグインなしでも一通りのことは出来ましたし。

さらにその前はDreamweaverをやはり半強制的に使わされてました。
Dreamweaver CCも2017ならば今時なフロントエンド開発に耐えられるのですが((Sassの自動コンパイル・ライブビュー・Emmetなど))、
当時は2014で重くてバグも多くて辛かった。。。

さらにその前はmiというテキストエディタでHTML/CSS/jQeuryをコーディングしてました。
miは軽いので今でもちょっとしたメモや、設定ファイルの編集等で利用しています。

<h3>エディタの乗り換えを検討する</h3>
ブラニューに入社してからも、しばらく惰性でNetbeansを使っていたのですが、
そもそもRuby on Rails / CoffeeScriptの開発で、Netbeansってどうなんだろ？
そもそも今の開発環境ならばNetbeansいらねんじゃね((前職はGulpやWebpackが使えず、ある程度IDEの助けが必要だったので))？
などと色々思うところあり、エディタの乗り換えを検討し始めました。

<h3>色々試してみる</h3>
<h4>Sublime Text 3</h4>
恋に落ちると評判のエディタ。フロントエンドエンジニア・WEBデザイナーだけでなくプログラマ・バックエンドエンジニアにも好評。
IDEの悪い部分を捨てているため動作は軽快。ネイティブアプリ。
ただ設定が面倒なのと、優良なのがネック。本当に恋に落ちれば70ドルは高くないのですが、残念ながら恋には落ちませんでしたｗ

<h4>Atom</h4>
GitHub謹製エディタ。ここ2年ほどで人気に。Electron((Node.jsなどWEBアプリケーション利用したデスクトップ用フレームワーク))を使用したデスクトップアプリ。
さすがにネイティブアプリのSublime Textに比べるとパフォーマンスは落ちるが、設定は簡単。
IDEからの乗り換えだとむしろ軽く感じる。

<h4>Brackets</h4>
Adobe謹製エディタ。DreamweaverからリッチなIDE機能を抜いた感じのもの。こちらもNode.jsとChromiumで作られている。
最初からマルチランゲージ対応で日本語化されている。ライブビューなどDWの一部の機能を持っている。
上の2つに比べると、ややナレッジは少ない。

<h4>Visual Studio Code</h4>
Microsoft謹製エディタ。VSCodeとVisual Studioの関係はBraketsとDWみたいなものでしょうか。こちらもElectronベース。最初からマルチランゲージ対応で日本語化されている。最初からGitに対応している。最初からリファクタリングやデバッグにも対応していてIDEっぽい。
そしてIDEの割には軽い。

<h3>Atomに決める</h3>
Qiitaで一番多くのナレッジが投稿されていたのと、プラグインのインストールが簡単だったのでAtomにしました。
VisualStudioと迷いましたが、GitはSourceTreeをつかうので。
Bracketsのライブプレビューも便利なのですが、GulpとかWebpackのBrowsersyncを使うしいいかな？となりました。
ちなみに、たまにDreamweaver CCも使います((何かと「エンジニア」から軽く見られるDWですが、2017のデベロッパーモードだと一般的なIDEと変わらない感覚で使えるので悪くありません。))。コンパイラ無しでSassをビルドしてくれるのは魅力です。